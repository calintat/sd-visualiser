---
source: sd-core/src/language/mod.rs
expression: to_pet(&graph)
---
Graph(
  nodes: [
    Operation(Op(
      name: "builtin.module",
      successors: [],
    )),
    Edge(Nil),
    Thunk(Graph(
      nodes: [
        Operation(Op(
          name: "func.func",
          successors: [],
        )),
        Edge(Nil),
        Thunk(Graph(
          nodes: [
            Thunk(Graph(
              nodes: [
                Edge(BoundVar(Var(
                  id: "%2",
                  index: None,
                ))),
                Edge(BoundVar(Var(
                  id: "%3",
                  index: None,
                ))),
                Operation(Op(
                  name: "func.return",
                  successors: [],
                )),
                Edge(BoundVar(Var(
                  id: "%4",
                  index: None,
                ))),
                Edge(CF(None)),
                Operation(Op(
                  name: "arith.addi",
                  successors: [],
                )),
              ],
              node_holes: [],
              edge_property: directed,
              edges: [
                Some((3, 2, 0)),
                Some((2, 4, 0)),
                Some((0, 5, 0)),
                Some((1, 5, 1)),
                Some((5, 3, 0)),
              ],
            )),
            Edge(CF(Some(BlockAddr("^bb4")))),
            Edge(CF(None)),
            Thunk(Graph(
              nodes: [
                Edge(BoundVar(Var(
                  id: "%arg0",
                  index: None,
                ))),
                Edge(BoundVar(Var(
                  id: "%1",
                  index: None,
                ))),
                Operation(Op(
                  name: "cf.br",
                  successors: [
                    BlockAddr("^bb4"),
                  ],
                )),
                Edge(CF(Some(BlockAddr("^bb4")))),
              ],
              node_holes: [],
              edge_property: directed,
              edges: [
                Some((1, 2, 0)),
                Some((0, 2, 1)),
                Some((2, 3, 0)),
              ],
            )),
            Edge(BoundVar(Var(
              id: "%arg0",
              index: None,
            ))),
            Edge(CF(Some(BlockAddr("^bb3")))),
            Edge(CF(Some(BlockAddr("^bb3")))),
            Thunk(Graph(
              nodes: [
                Edge(BoundVar(Var(
                  id: "%arg0",
                  index: None,
                ))),
                Operation(Op(
                  name: "cf.br",
                  successors: [
                    BlockAddr("^bb3"),
                  ],
                )),
                Edge(BoundVar(Var(
                  id: "%0",
                  index: None,
                ))),
                Edge(CF(Some(BlockAddr("^bb3")))),
                Operation(Op(
                  name: "arith.addi",
                  successors: [],
                )),
              ],
              node_holes: [],
              edge_property: directed,
              edges: [
                Some((2, 1, 0)),
                Some((1, 3, 0)),
                Some((0, 4, 0)),
                Some((0, 4, 1)),
                Some((4, 2, 0)),
              ],
            )),
            Edge(CF(Some(BlockAddr("^bb2")))),
            Thunk(Graph(
              nodes: [
                Edge(BoundVar(Var(
                  id: "%arg0",
                  index: None,
                ))),
                Operation(Op(
                  name: "cf.br",
                  successors: [
                    BlockAddr("^bb3"),
                  ],
                )),
                Edge(CF(Some(BlockAddr("^bb3")))),
              ],
              node_holes: [],
              edge_property: directed,
              edges: [
                Some((0, 1, 0)),
                Some((1, 2, 0)),
              ],
            )),
            Edge(CF(Some(BlockAddr("^bb1")))),
            Thunk(Graph(
              nodes: [
                Edge(BoundVar(Var(
                  id: "%arg0",
                  index: None,
                ))),
                Edge(BoundVar(Var(
                  id: "%arg1",
                  index: None,
                ))),
                Operation(Op(
                  name: "cf.cond_br",
                  successors: [
                    BlockAddr("^bb1"),
                    BlockAddr("^bb2"),
                  ],
                )),
                Edge(CF(Some(BlockAddr("^bb1")))),
                Edge(CF(Some(BlockAddr("^bb2")))),
              ],
              node_holes: [],
              edge_property: directed,
              edges: [
                Some((1, 2, 0)),
                Some((2, 3, 0)),
                Some((2, 4, 1)),
              ],
            )),
          ],
          node_holes: [],
          edge_property: directed,
          edges: [
            Some((1, 0, 0)),
            Some((0, 2, 0)),
            Some((4, 3, 0)),
            Some((5, 3, 1)),
            Some((6, 3, 2)),
            Some((3, 1, 0)),
            Some((4, 7, 0)),
            Some((8, 7, 1)),
            Some((7, 6, 0)),
            Some((4, 9, 0)),
            Some((10, 9, 1)),
            Some((9, 5, 0)),
            Some((11, 10, 0)),
            Some((11, 8, 1)),
            Some((11, 4, 2)),
          ],
        )),
      ],
      node_holes: [],
      edge_property: directed,
      edges: [
        Some((1, 0, 0)),
        Some((2, 1, 0)),
      ],
    )),
  ],
  node_holes: [],
  edge_property: directed,
  edges: [
    Some((1, 0, 0)),
    Some((2, 1, 0)),
  ],
)
