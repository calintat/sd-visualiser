program = _{ SOI ~ expr ~ EOI }

keyword = { "def" | "output" | "thunk" }

expr = { bind* ~ "output" ~ values? }
bind = { "def" ~ variable_def ~ "=" ~ value }

thunk = { "thunk" ~ addr ~ "=" ~ "{" ~ (variable_def ~ ("," ~ variable_def)*)? ~ "=>" ~ expr ~ "}" }

value = { variable | op ~ ("(" ~ (thunk+ | values ~ (";" ~ thunk+)?) ~ ")")? }
values = _{ value ~ ("," ~ value)* }

op = @{ !keyword ~ (("throwing" | "wrapping")? ~ symbol+ | "syscall/" ~ ASCII_ALPHANUMERIC+ | ASCII_ALPHA ~ ASCII_ALPHANUMERIC* ~ ("/" ~ (bool | number | char | name | string | ty))* )}
symbol = { "+" | "-" | "*" | "/" | "%" | "&" | "|" | "!" | "=" | "<" | ">" | "^" }
bool = { "true" | "false" }
number = @{ "-"? ~ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)? }
char = { "'" ~ (!"'" ~ ANY) ~ "'" }
name = { "`" ~ (!"`" ~ ANY)* ~ "`" }
string = { "\"" ~ ("\\\"" | !"\"" ~ ANY)* ~ "\"" }

ty = !{ generic_ty | base_ty | function_ty | tuple_ty }
tys = _{ ty ~ ("," ~ ty)* }
base_ty = @{ 'A'..'Z' ~ (ASCII_ALPHANUMERIC | "$"| "_" | "-" | "." )* }
generic_ty = { base_ty ~ "<" ~ tys ~ ">" }
tuple_ty = { "(" ~ tys? ~ ")" }
function_ty = { tuple_ty ~ "->" ~ ty }

variable = { addr | identifier ~ "(" ~ "id" ~ ":" ~ addr ~ ")" }
variable_def = { variable ~ (":" ~ ty)? }

COMMENT = _{ "#" ~ (!"\n" ~ ANY)* }
WHITESPACE = _{ " " | "\t" | "\n" }

addr = @{ ("@" | "%") ~ ASCII_DIGIT+ }
identifier = @{ ty ~ "_tangent" ~ ("Add" | "Zero") | (!"(" ~ !" " ~ ANY)+ }
